# Sonoff controlled garage fan.
homeassistant:
  customize:
    switch.garage_fan:
      friendly_name: "Garage fläkt"

# Store the total runtime of the fan in a variable.
# NOTE! This is time _except_ today. The sensor with same name has it all.
variable:
  garage_fan_runtime:
    value: 0
    name: Garage Fan Runtime Offset.
    restore: true

sensor:
  - platform: template
    sensors:
      garage_fan_status:
        value_template: >
          {% if states("switch.garage_fan") == "on" %}
            1
          {% else %}
            0
          {% endif %}
  - platform: template
    sensors:
      garage_fan_runtime:
        unit_of_measurement: 'h'
        value_template: '{{ (states.variable.garage_fan_runtime.state | float) + (states.sensor.garage_fan_runtime_today.state | float) | round(2) }}'

      garage_fan_runtime_human:
        value_template: >
          {% set unformatted = (states.sensor.garage_fan_runtime.state | float) %}
          {% set minutes = ((unformatted- (unformatted | int)) * 60 ) | round %}
          {% set hours = (unformatted | int) % 24 %}
          {% set days = ((unformatted | int) / 24) | int %}
          {{ days }}d {{ hours }}h {{ minutes }}m

      garage_fan_runtime_today_human:
        value_template: >
          {% set unformatted = (states.sensor.garage_fan_runtime_today.state | float) %}
          {% set minutes = ((unformatted- (unformatted | int)) * 60 ) | round %}
          {% set hours = (unformatted | int) %}
          {{ hours }}h {{ minutes }}m

      garage_fan_power_cost:
        unit_of_measurement: '€'
        value_template: '{{ ((states.sensor.garage_fan_runtime.state | float) * 0.016 * 0.12) | round(2) }}'

  - platform: history_stats
    name: garage_fan_runtime_today
    entity_id: switch.garage_fan
    state: "on"
    type: time
    start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
    end: '{{ now() }}'
  - platform: history_stats
    name: garage_fan_runtime_yesterday
    entity_id: switch.garage_fan
    state: "on"
    type: time
    end: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
    duration:
      hours: 24

automation:
  - alias: "Check garage fan power state on HA start-up"
    trigger:
      platform: homeassistant
      event: start
    action:
      - service: mqtt.publish
        data:
          topic: "/sonoff/garagefan/cmnd/POWER"
          payload: ""
      - service: mqtt.publish
        data:
          topic: "/sonoff/garagefan/cmnd/state"
          payload: ""

  - alias: 'Starta fläkten om luftfuktighet är hög och absolut luftfuktighet är lägre utomhus.'
    trigger:
      platform: time_pattern
      minutes: '/15'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: switch.garage_fan
          state: 'off'
        - condition: template
          value_template: '{{ states.sensor.ruuvi_garage_luftfuktighet.state|float > 60 }}'
        - condition: template
          value_template: '{{ states.sensor.garage_ruuvi_absolutehumidity.state|float > (states.sensor.outside_ruuvi_absolutehumidity.state|float)+1 }}'
    action:
      - service: switch.turn_on
        entity_id: switch.garage_fan

  - alias: 'Stanna fläkten om luftfuktighet är ok, eller om absolut är nästan som utomhus.'
    trigger:
      platform: time_pattern
      minutes: '/15'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: switch.garage_fan
          state: 'on'
        - condition: or
          conditions:
            - condition: template
              value_template: '{{ states.sensor.ruuvi_garage_luftfuktighet.state|float < 50 }}'
            - condition: template
              value_template: '{{ states.sensor.garage_ruuvi_absolutehumidity.state|float < (states.sensor.outside_ruuvi_absolutehumidity.state|float)+1 }}'
    action:
      - service: switch.turn_off
        entity_id: switch.garage_fan

  - alias: 'Uppdatera runtime vid midnatt'
    trigger:
    - platform: time
      at: '00:00:00'
    action:
    - service: variable.set_variable
      data:
        variable: garage_fan_runtime
        value_template: '{{ (variable.state | float) + (states.sensor.garage_fan_runtime_yesterday.state | float) }}'

switch:
  - platform: mqtt
    name: garage_fan
    icon: mdi:fan
    state_topic: "/sonoff/garagefan/stat/RESULT"
    value_template: "{{ value_json.POWER }}"
    command_topic: "/sonoff/garagefan/cmnd/POWER"
    availability_topic: "/sonoff/garagefan/tele/LWT"
    qos: 1
    payload_on: "ON"
    payload_off: "OFF"
    payload_available: "Online"
    payload_not_available: "Offline"
    retain: false